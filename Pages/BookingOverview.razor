@page "/booking-overview"
@using EasyInvoice.Models
@inject IJSRuntime JSRuntime

<h3>Buchungsabrechnung</h3>

<table class="table-style">
    <thead class="thead-dark">
        <tr>
            <th></th>
            <th>Art</th>
            <th>Von</th>
            <th>Bis</th>
            <th>Preis (€)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in _bookings)
        {
            <tr>
                <td>
                    <div class="td-content">
                        <input type="checkbox" @onchange="ToggleNewBooking" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <select @bind="booking.Type">
                            @foreach (var type in Enum.GetValues(typeof(BookingType)).Cast<BookingType>())
                            {
                                <option value="@type">@type.GetDisplayName()</option>
                            }
                        </select>
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <InputDate @bind-Value="booking.StartDate"
                                   class="@(booking.IsDateValid ? "" : "invalid-date")" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <InputDate @bind-Value="booking.EndDate"
                                   class="@(booking.IsDateValid ? "" : "invalid-date")" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        @booking.Price.ToString("F2")
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<button @onclick="DisplayInvoice" class="btn btn-primary" style="display: block; margin: 0 auto;">Rechnung anzeigen</button>

@code {

    private List<Booking> _bookings = new()
    {
        new Booking
        {
            Type = BookingType.HalfBoard,
            StartDate = DateTime.Now.AddDays(1),
            EndDate = DateTime.Now.AddDays(2),
            Price = 0,
            IsDateValid = true
        }
    };

    private void ToggleNewBooking(ChangeEventArgs e)
    {
        if (e.Value as bool? == true)
        {
            CreateNewBooking();
        }
        else
        {
            RemoveBooking();
        }
    }

    private void CreateNewBooking()
    {
        var newBooking = new Booking
            {
                Type = BookingType.HalfBoard,
                StartDate = DateTime.Now.AddDays(1),
                EndDate = DateTime.Now.AddDays(2),
                Price = 0,
                IsDateValid = true
            };

        _bookings.Add(newBooking);
    }

    private void RemoveBooking()
    {
        if (_bookings.Any())
        {
            _bookings.RemoveAt(_bookings.Count - 1);
        }
    }

    private void DisplayInvoice(MouseEventArgs e)
    {
    }
}
