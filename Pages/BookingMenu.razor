@page "/booking-menu"

@using EasyInvoice

@inject IJSRuntime JSRuntime
@inject NavigationManager NavManager
@inject BookingService _bookingService

<h3>Buchungsabrechnung</h3>
<hr />

<table class="table-style">
    <thead class="thead-dark">
        <tr>
            <th></th>
            <th>Art</th>
            <th>Start</th>
            <th>Ende</th>
            <th>Preis (€)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in _bookingService.GetBookings())
        {
            <tr>
                <td>
                    <div class="td-content">
                        <input type="checkbox" @onchange="(e) => ToggleNewBooking(e, booking)" checked="@(booking.IsSelected)" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <select @bind="booking.Type">
                            @foreach (var type in Enum.GetValues(typeof(BookingType)).Cast<BookingType>())
                            {
                                <option value="@type">@type.GetDisplayName()</option>
                            }
                        </select>
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <InputDate @bind-Value="booking.StartDate"
                                   class="@(booking.IsDateValid ? "" : "invalid-date")" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <InputDate @bind-Value="booking.EndDate"
                                   class="@(booking.IsDateValid ? "" : "invalid-date")" />
                    </div>
                </td>
                <td>
                    <div class="td-content">
                        <InputNumber @bind-Value="booking.Price"
                                     step="0.01"
                                     min="0.00"
                                     class="text-center" />
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center align-items-center gap-2">
    <button @onclick="DisplayInvoice" class="btn btn-primary">Rechnung anzeigen</button>
    <button @onclick="ToggleClearState" class="btn btn-danger">
        @(_bookingService.IsCleared ? "Zurück" : "Clear")
    </button>
</div>

@code {


    private void ToggleNewBooking(ChangeEventArgs e, Booking booking)
    {
        booking.IsSelected = (bool)e.Value!;

        if (booking.IsSelected)
        {
            CreateNewBooking();
        }
        else
        {
            RemoveBooking(booking);
        }
    }

    private void CreateNewBooking()
    {
        var newBooking = _bookingService.GetEmptyBooking();
        _bookingService.AddBooking(newBooking);
    }

    private void RemoveBooking(Booking booking)
    {
        _bookingService.RemoveBooking(booking);
    }

    private void ToggleClearState()
    {
        _bookingService.IsCleared = !_bookingService.IsCleared;
    }

    private void DisplayInvoice(MouseEventArgs e)
    {
        bool bookingsValid = _bookingService.GetBookings().TrueForAll(b => b.IsDateValid);

        if (bookingsValid)
        {
            NavManager.NavigateTo("/invoice-display");
        }
        else
        {
            JSRuntime.InvokeVoidAsync("alert", "Bitte überprüfen Sie die Buchungsdaten.");
        }
    }
}
